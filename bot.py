import logging
from aiogram import Bot, Dispatcher, types
import asyncio
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters import CommandStart
from aiogram.utils.callback_data import CallbackData

API_TOKEN = '8189935957:AAHIGvtVwJCnrpj2tTNCJEZbwfcYvlRYfmQ'
ADMIN_ID = 2041956053  # –¢–≤–æ–π Telegram ID

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)

# Callbacks
buy_cb = CallbackData('buy', 'item')
payment_cb = CallbackData('payment', 'item', 'user_id')

# –ü—Ä–æ–¥—É–∫—Ç—ã
products = {
    'guide1': {
        'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ Telegram-–∫–∞–Ω–∞–ª–∞ –∫–∞–∫ —É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤',
        'price': 2.5,
        'link': 'https://drive.google.com/file/d/1nkEJGzW5ZyOhkX0lcUhWk6dknVe-Bu4i/view?usp=sharing'
    },
    'guide2': {
        'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –≤–µ–¥–µ–Ω–∏–µ Instagram –∫–∞–∫ —É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤',
        'price': 3.0,
        'link': 'https://drive.google.com/file/d/1P5MKPuwz7TcVRGhFPUNgkewkD4F3DMWM/view?usp=sharing'
    },
    'guide3': {
        'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ Telegram-–∫–∞–Ω–∞–ª–∞',
        'price': 3.0,
        'link': 'https://drive.google.com/file/d/1ieaIVMBPTK4VJxEMzNd8B4gBrPTI9pgS/view?usp=sharing'
    },
    'guide4': {
        'title': '–ü–∞–∫–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è Instagram –∏ Telegram',
        'price': 1.5,
        'link': 'https://drive.google.com/file/d/1QiGnK9mT1xFfJN48wHx5uD4fPkWbeeuz/view?usp=sharing'
    },
    'guide5': {
        'title': '–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ 7 –¥–Ω–µ–π ‚Äî —à–∞–±–ª–æ–Ω—ã –ø–æ—Å—Ç–æ–≤ –∏ —Å—Ç–æ—Ä–∏—Å',
        'price': 2.0,
        'link': 'https://drive.google.com/file/d/1ilx4yb5BTn6y181Cwzl84gtJ_f6zzvK3/view?usp=sharing'
    },
    'guide6': {
        'title': '–°–∫—Ä–∏–ø—Ç—ã –¥–ª—è Telegram-–ø—Ä–æ–¥–∞–∂',
        'price': 2.0,
        'link': 'https://drive.google.com/file/d/1fWshzKpqpDBozKwsBCwCuV-9F6BKex4N/view?usp=sharing'
    },
    'guide7': {
        'title': '10 –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏ –∫–∞–∫ –∏—Ö –∏—Å–ø—Ä–∞–≤–∏—Ç—å',
        'price': 1.5,
        'link': 'https://drive.google.com/file/d/1MgICSvvxYZe50xra5K2eVwCZ4Dmr6lLV/view?usp=sharing'
    },
    'guide8': {
        'title': '–ö–∞–∫ –≤–µ—Å—Ç–∏ Instagram Stories –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
        'price': 2.0,
        'link': 'https://drive.google.com/file/d/1MR_ruMOMfB1xU5P-9KegA2JTn7FqXrRx/view?usp=sharing'
    },
}

@dp.message_handler(CommandStart())
async def start(message: types.Message):
    kb = InlineKeyboardMarkup(row_width=1)
    for pid, data in products.items():
        kb.add(InlineKeyboardButton(
            text=f"{data['title']} ‚Äî {data['price']} USDT",
            callback_data=buy_cb.new(item=pid)
        ))
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ProSocialToolsBot!\n–í—ã–±–µ—Ä–∏—Ç–µ –≥–∞–π–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:", reply_markup=kb)

@dp.callback_query_handler(buy_cb.filter())
async def handle_buy(call: types.CallbackQuery, callback_data: dict):
    pid = callback_data['item']
    product = products[pid]

    payment_text = f"–í—ã –≤—ã–±—Ä–∞–ª–∏: <b>{product['title']}</b>\n\nüíµ –°—Ç–æ–∏–º–æ—Å—Ç—å: <b>{product['price']} USDT</b>\n\n–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT (TRC20) –Ω–∞ –∫–æ—à–µ–ª—ë–∫:\n<code>TVc4ndDw68YF2PRsWkCeAJFboBmedzteXE</code>\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."
    
    confirm_kb = InlineKeyboardMarkup().add(
        InlineKeyboardButton(
            text="‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª",
            callback_data=payment_cb.new(item=pid, user_id=call.from_user.id)
        )
    )

    await call.message.answer(payment_text, reply_markup=confirm_kb, parse_mode='HTML')
    await call.answer()

@dp.callback_query_handler(payment_cb.filter())
async def handle_payment_confirmation(call: types.CallbackQuery, callback_data: dict):
    pid = callback_data['item']
    user_id = callback_data['user_id']
    product = products[pid]

    msg = f"‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{call.from_user.username or call.from_user.id} –æ–ø–ª–∞—Ç–∏–ª: {product['title']}\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–¥–∞—á—É?"
    
    confirm_kb = InlineKeyboardMarkup().add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm:{user_id}:{pid}"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel:{user_id}")
    )

    await bot.send_message(chat_id=ADMIN_ID, text=msg, reply_markup=confirm_kb)
    await call.answer("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")

@dp.callback_query_handler(lambda c: c.data.startswith("confirm:"))
async def confirm_delivery(call: types.CallbackQuery):
    _, user_id, pid = call.data.split(":")
    product = products[pid]

    await bot.send_message(chat_id=int(user_id), text=f"‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É!\n–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞: {product['link']}")
    await call.answer("–§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—é.")

@dp.callback_query_handler(lambda c: c.data.startswith("cancel:"))
async def cancel_delivery(call: types.CallbackQuery):
    _, user_id = call.data.split(":")
    await bot.send_message(chat_id=int(user_id), text="‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")
    await call.answer("–û—Ç–∫–ª–æ–Ω–µ–Ω–æ.")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
