import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart

API_TOKEN = '8189935957:AAHIGvtVwJCnrpj2tTNCJEZbwfcYvlRYfmQ'
ADMIN_ID = 2041956053  # –¢–≤–æ–π Telegram ID

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –í—Å–µ —Ç–æ–≤–∞—Ä—ã
products = {
    'guide1': {
        'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ Telegram-–∫–∞–Ω–∞–ª–∞ –∫–∞–∫ —É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤',
        'price': 2.5,
        'link': 'https://drive.google.com/file/d/1nkEJGzW5ZyOhkX0lcUhWk6dknVe-Bu4i/view?usp=sharing'
    },
    'guide2': {
        'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –≤–µ–¥–µ–Ω–∏–µ Instagram –∫–∞–∫ —É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤',
        'price': 3.0,
        'link': 'https://drive.google.com/file/d/1P5MKPuwz7TcVRGhFPUNgkewkD4F3DMWM/view?usp=sharing'
    },
    'guide3': {
        'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ Telegram-–∫–∞–Ω–∞–ª–∞',
        'price': 3.0,
        'link': 'https://drive.google.com/file/d/1ieaIVMBPTK4VJxEMzNd8B4gBrPTI9pgS/view?usp=sharing'
    },
    'guide4': {
        'title': '–ü–∞–∫–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è Instagram –∏ Telegram',
        'price': 1.5,
        'link': 'https://drive.google.com/file/d/1QiGnK9mT1xFfJN48wHx5uD4fPkWbeeuz/view?usp=sharing'
    },
    'guide5': {
        'title': '–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ 7 –¥–Ω–µ–π ‚Äî —à–∞–±–ª–æ–Ω—ã –ø–æ—Å—Ç–æ–≤ –∏ —Å—Ç–æ—Ä–∏—Å',
        'price': 2.0,
        'link': 'https://drive.google.com/file/d/1ilx4yb5BTn6y181Cwzl84gtJ_f6zzvK3/view?usp=sharing'
    },
    'guide6': {
        'title': '–°–∫—Ä–∏–ø—Ç—ã –¥–ª—è Telegram-–ø—Ä–æ–¥–∞–∂',
        'price': 2.0,
        'link': 'https://drive.google.com/file/d/1fWshzKpqpDBozKwsBCwCuV-9F6BKex4N/view?usp=sharing'
    },
    'guide7': {
        'title': '10 –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏ –∫–∞–∫ –∏—Ö –∏—Å–ø—Ä–∞–≤–∏—Ç—å',
        'price': 1.5,
        'link': 'https://drive.google.com/file/d/1MgICSvvxYZe50xra5K2eVwCZ4Dmr6lLV/view?usp=sharing'
    },
    'guide8': {
        'title': '–ö–∞–∫ –≤–µ—Å—Ç–∏ Instagram Stories –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
        'price': 2.0,
        'link': 'https://drive.google.com/file/d/1MR_ruMOMfB1xU5P-9KegA2JTn7FqXrRx/view?usp=sharing'
    }
}

@dp.message(CommandStart())
async def cmd_start(message: Message):
    kb = InlineKeyboardMarkup(row_width=1)
    for key, product in products.items():
        kb.add(InlineKeyboardButton(
            text=f"{product['title']} ‚Äî {product['price']} USDT",
            callback_data=f"buy:{key}"
        ))
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –≥–∞–π–¥:", reply_markup=kb)

@dp.callback_query(F.data.startswith("buy:"))
async def buy_product(call: CallbackQuery):
    pid = call.data.split(":")[1]
    product = products.get(pid)
    if not product:
        await call.answer("–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
        return

    text = f"""–í—ã –≤—ã–±—Ä–∞–ª–∏: <b>{product['title']}</b>
üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å: <b>{product['price']} USDT</b>

–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT (TRC20) –Ω–∞ –∫–æ—à–µ–ª—ë–∫:
<code>TVc4ndDw68YF2PRsWkCeAJFboBmedzteXE</code>

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."""
    kb = InlineKeyboardMarkup().add(
        InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f"paid:{pid}:{call.from_user.id}")
    )
    await call.message.answer(text, reply_markup=kb, parse_mode='HTML')
    await call.answer()

@dp.callback_query(F.data.startswith("paid:"))
async def confirm_payment(call: CallbackQuery):
    _, pid, uid = call.data.split(":")
    product = products.get(pid)
    if not product:
        await call.answer("–û—à–∏–±–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∞.", show_alert=True)
        return

    text = f"""‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{call.from_user.username or call.from_user.id} –æ–ø–ª–∞—Ç–∏–ª: {product['title']}

–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–¥–∞—á—É?"""
    kb = InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm:{uid}:{pid}"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel:{uid}")
    )
    await bot.send_message(chat_id=ADMIN_ID, text=text, reply_markup=kb)
    await call.answer("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

@dp.callback_query(F.data.startswith("confirm:"))
async def admin_confirm(call: CallbackQuery):
    _, uid, pid = call.data.split(":")
    product = products.get(pid)
    await bot.send_message(chat_id=int(uid), text=f"‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É!\n–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞: {product['link']}")
    await call.answer("–§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—é.")

@dp.callback_query(F.data.startswith("cancel:"))
async def admin_cancel(call: CallbackQuery):
    _, uid = call.data.split(":")
    await bot.send_message(chat_id=int(uid), text="‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")
    await call.answer("–û—Ç–∫–ª–æ–Ω–µ–Ω–æ.")

async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
