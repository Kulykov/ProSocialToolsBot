import asyncio
from aiogram import Bot, Dispatcher, F, types
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.enums.parse_mode import ParseMode
from aiogram.utils.callback_data import CallbackData

API_TOKEN = '8189935957:AAHIGvtVwJCnrpj2tTNCJEZbwfcYvlRYfmQ'
ADMIN_ID = 2041956053
USDT_WALLET = 'TVc4ndDw68YF2PRsWkCeAJFboBmedzteXE'

bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
products = {
    'guide1': {'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ Telegram-–∫–∞–Ω–∞–ª–∞ –∫–∞–∫ —É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤', 'price': 2.5, 'link': 'https://drive.google.com/file/d/1nkEJGzW5ZyOhkX0lcUhWk6dknVe-Bu4i/view?usp=sharing'},
    'guide2': {'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –≤–µ–¥–µ–Ω–∏–µ Instagram –∫–∞–∫ —É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤', 'price': 3.0, 'link': 'https://drive.google.com/file/d/1P5MKPuwz7TcVRGhFPUNgkewkD4F3DMWM/view?usp=sharing'},
    'guide3': {'title': '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ Telegram-–∫–∞–Ω–∞–ª–∞', 'price': 3.0, 'link': 'https://drive.google.com/file/d/1ieaIVMBPTK4VJxEMzNd8B4gBrPTI9pgS/view?usp=sharing'},
    'guide4': {'title': '–ü–∞–∫–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è Instagram –∏ Telegram', 'price': 1.5, 'link': 'https://drive.google.com/file/d/1QiGnK9mT1xFfJN48wHx5uD4fPkWbeeuz/view?usp=sharing'},
    'guide5': {'title': '–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ 7 –¥–Ω–µ–π ‚Äî —à–∞–±–ª–æ–Ω—ã –ø–æ—Å—Ç–æ–≤ –∏ —Å—Ç–æ—Ä–∏—Å', 'price': 2.0, 'link': 'https://drive.google.com/file/d/1ilx4yb5BTn6y181Cwzl84gtJ_f6zzvK3/view?usp=sharing'},
    'guide6': {'title': '–°–∫—Ä–∏–ø—Ç—ã –¥–ª—è Telegram-–ø—Ä–æ–¥–∞–∂', 'price': 2.0, 'link': 'https://drive.google.com/file/d/1fWshzKpqpDBozKwsBCwCuV-9F6BKex4N/view?usp=sharing'},
    'guide7': {'title': '10 –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏ –∫–∞–∫ –∏—Ö –∏—Å–ø—Ä–∞–≤–∏—Ç—å', 'price': 1.5, 'link': 'https://drive.google.com/file/d/1MgICSvvxYZe50xra5K2eVwCZ4Dmr6lLV/view?usp=sharing'},
    'guide8': {'title': '–ö–∞–∫ –≤–µ—Å—Ç–∏ Instagram Stories –∫–∞–∂–¥—ã–π –¥–µ–Ω—å', 'price': 2.0, 'link': 'https://drive.google.com/file/d/1MR_ruMOMfB1xU5P-9KegA2JTn7FqXrRx/view?usp=sharing'},
}

@dp.message(F.text == "/start")
async def start(message: Message):
    kb = InlineKeyboardMarkup()
    for pid, item in products.items():
        kb.add(InlineKeyboardButton(text=f"{item['title']} ‚Äî {item['price']} USDT", callback_data=f"buy:{pid}"))
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏:", reply_markup=kb)

@dp.callback_query(F.data.startswith("buy:"))
async def buy_item(callback: types.CallbackQuery):
    pid = callback.data.split(":")[1]
    product = products[pid]
    text = (
        f"<b>{product['title']}</b>\n"
        f"üí∞ –¶–µ–Ω–∞: {product['price']} USDT\n\n"
        f"–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT (TRC20) –Ω–∞ –∫–æ—à–µ–ª—ë–∫:\n<code>{USDT_WALLET}</code>\n\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
    )
    kb = InlineKeyboardMarkup().add(
        InlineKeyboardButton(text="‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f"paid:{pid}:{callback.from_user.id}")
    )
    await callback.message.answer(text, reply_markup=kb)
    await callback.answer()

@dp.callback_query(F.data.startswith("paid:"))
async def paid(callback: types.CallbackQuery):
    _, pid, uid = callback.data.split(":")
    product = products[pid]
    username = callback.from_user.username or f"id{callback.from_user.id}"
    text = f"‚ùóÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –æ–ø–ª–∞—Ç–∏–ª <b>{product['title']}</b>\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–¥–∞—á—É?"
    kb = InlineKeyboardMarkup().add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm:{uid}:{pid}"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel:{uid}")
    )
    await bot.send_message(ADMIN_ID, text, reply_markup=kb)
    await callback.message.answer("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    await callback.answer()

@dp.callback_query(F.data.startswith("confirm:"))
async def confirm(callback: types.CallbackQuery):
    _, uid, pid = callback.data.split(":")
    product = products[pid]
    await bot.send_message(uid, f"‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É!\n–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞: {product['link']}")
    await callback.answer("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é.")

@dp.callback_query(F.data.startswith("cancel:"))
async def cancel(callback: types.CallbackQuery):
    _, uid = callback.data.split(":")
    await bot.send_message(uid, "‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")
    await callback.answer("–û—Ç–∫–ª–æ–Ω–µ–Ω–æ.")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
